//
//  BirthdaysTableViewController.swift
//  BirthdayTracker
//
//  Created by a96 on 12/08/2019.
//  Copyright ¬© 2019 Tony R Inc. All rights reserved.
//

import UIKit
import CoreData
import UserNotifications

class BirthdaysTableViewController: UITableViewController {

    var birthdays = [Birthday]()
    
    let dateFormatter = DateFormatter()
    
    var firstNameData: [String] = []
    var lastNameData: [String] = []
    var giftIdeasData: [String] = []
    var birthdateData: [Date] = []
    
    @IBAction func saveToBirthdaysTableViewController (segue:UIStoryboardSegue) {
        
        let editBirthdayViewController = segue.source as! EditBirthdayTableViewController
        let editedFirstNameData = editBirthdayViewController.firstNameString
        let editedLastNameData = editBirthdayViewController.lastNameString
        let editedGiftIdeasData = editBirthdayViewController.giftIdeasString
        let editedBirthdateData = editBirthdayViewController.birthdateString
        let index = editBirthdayViewController.index
        
        tableView.reloadData()
        
        //—Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ–±—Ä–∞—Ç–Ω–æ –≤ —Ç–∞–±–ª–∏—Ü—É
        let birthday = birthdays[index!]
        birthday.firstName = editedFirstNameData
        birthday.lastName = editedLastNameData
        birthday.giftIdeas = editedGiftIdeasData
        birthday.birthdate = editedBirthdateData
        let appDelegate = UIApplication.shared.delegate as! AppDelegate
        let context = appDelegate.persistentContainer.viewContext
        
        context.refresh(birthday, mergeChanges: true)
        
        do {
            try context.save()
        } catch let error {
            print("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏ \(error).")
        }
        
    }
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        dateFormatter.dateStyle = .long //–¢–æ–∂–µ —á—Ç–æ –∏ DateFormatter.Style.long
        dateFormatter.timeStyle = .none
    }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        
        let appDelegate = UIApplication.shared.delegate as! AppDelegate
        let context = appDelegate.persistentContainer.viewContext
        
        let fetchRequest = Birthday.fetchRequest() as NSFetchRequest<Birthday>
        
        let sortDescriptor1 = NSSortDescriptor(key: "birthdateWithoutYear", ascending: true)
        let sortDescriptor2 = NSSortDescriptor(key: "firstName", ascending: true)
        let sortDescriptor3 = NSSortDescriptor(key: "lastName", ascending: true)
        fetchRequest.sortDescriptors = [sortDescriptor1, sortDescriptor2, sortDescriptor3] //—Å–Ω–∞—á–∞–ª–∞ —Å–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –¥–∞—Ç–µ, –ø–æ—Ç–æ–º –ø–æ –∏–º–µ–Ω–∏, –ø–æ—Ç–æ–º –ø–æ —Ñ–∞–º–∏–ª–∏–∏
        
        do {
            birthdays = try context.fetch(fetchRequest)
        } catch let error {
            print("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏: \(error).")
        }
        
        tableView.reloadData()
    }

    // MARK: - Table view data source
    
    override func numberOfSections(in tableView: UITableView) -> Int { //—Å–æ–æ–±—â–∞–µ—Ç —Ç–∞–±–ª–∏—á. –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—é, —Å–∫–æ–ª—å–∫–æ —Ä–∞–∑–¥–µ–ª–æ–≤ –æ–Ω –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å
        // #warning Incomplete implementation, return the number of sections
        return 1
    }

    override func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int { //—Å–∫–æ–ª—å–∫–æ —Ä—è–¥–æ–≤ –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤ –∫–∞–∂–¥–æ–º —Ä–∞–∑–¥–µ–ª–µ
        // #warning Incomplete implementation, return the number of rows
        return birthdays.count
    }

    override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        // Configure the cell...
        let cell = tableView.dequeueReusableCell(withIdentifier: "birthdayCellIdentifier", for: indexPath) //—Å–æ–∑–¥–∞–Ω–∏–µ UITableViewCell
        let birthday = birthdays[indexPath.row] //–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ, –∫–∞–∫–æ–∏ÃÜ –∏–º–µ–Ω–Ω–æ Birthday –∏–∑ –º–∞—Å—Å–∏–≤–∞ Birthday –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤–Ω—É—Ç—Ä–∏ —è—á–µ–∏ÃÜ–∫–∏
        
        let firstName = birthday.firstName ?? ""
        let lastName = birthday.lastName ?? ""
        let giftIdeas = birthday.giftIdeas ?? ""
        let additionalNotification = birthday.additionalNotification
        
        //–≤–æ–∑—Ä–∞—Å—Ç
        let now = Date()
        let ageComponents = Calendar.current.dateComponents([.year], from: birthday.birthdate!, to: now)
        let age = "  \(ageComponents.year!)"
        
        //–æ—Å—Ç–∞—Ç–æ–∫ –¥–Ω–µ–π –¥–æ –¥–Ω—è —Ä–æ–∂–¥–µ–Ω–∏—è
        let today = Calendar.current.startOfDay(for: Date())
        let dayAndMonth = Calendar.current.dateComponents([.day, .month], from: birthday.birthdate!)
        let nextBirthDay = Calendar.current.nextDate(after: today, matching: dayAndMonth, matchingPolicy: .nextTimePreservingSmallerComponents)! //.nextTimePreservingSmallerComponents - –µ—Å–ª–∏ –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è 29 —Ñ–µ–≤—Ä–∞–ª—è, –µ–≥–æ —Å–ª–µ–¥—É—é—â–µ–µ –ø–æ—è–≤–ª–µ–Ω–∏–µ –±—É–¥–µ—Ç —Ä–∞—Å—Å—á–∏—Ç–∞–Ω–Ω–æ –Ω–∞ 1 –º–∞—Ä—Ç–∞, –µ—Å–ª–∏ –≥–æ–¥ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –≤–∏—Å–æ–∫–æ—Å–Ω—ã–º –≥–æ–¥–æ–º
        let difference = Calendar.current.dateComponents([.day], from: today, to: nextBirthDay)
        
        //–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –æ–∫–æ–Ω—á–∞–Ω–∏–µ
        func rightDay() -> String {
            var day = "–¥–Ω–µ–π"
            let remainder = difference.day! % 10
            switch remainder {
            case 1:
                if difference.day! != 11 {
                    day = "–¥–µ–Ω—å"
                }
            case 2,3,4:
                if difference.day! != 12 && difference.day! != 13 && difference.day! != 14 {
                    day = "–¥–Ω—è"
                }
            default:
                break
            }
            let tomorrow = Calendar.current.date(byAdding: .day, value: +1, to: today)!
            if Calendar.current.dateComponents([.day, .month], from: today) == dayAndMonth {
                return "–°–µ–≥–æ–¥–Ω—è ü•≥"
            }
            else if Calendar.current.dateComponents([.day, .month], from: tomorrow) == dayAndMonth {
                return "–ó–∞–≤—Ç—Ä–∞ üòè"
            }
            else if additionalNotification == 1 && difference.day! == 7 {
                return "7 –¥–Ω–µ–π ‚òùÔ∏è"
            }
            else if additionalNotification == 2 && difference.day! == 14 {
                return "14 –¥–Ω–µ–π ‚òùÔ∏è"
            }
            else if additionalNotification == 3 && difference.day! == 30 {
                return "30 –¥–Ω–µ–π ‚òùÔ∏è"
            }
            else {
                return "\(difference.day!) " + day
            }
        }
        
        //—Å–¥–µ–ª–∞—Ç—å —á–∞—Å—Ç—å —Ç–µ–∫—Å—Ç–∞ –∂–∏—Ä–Ω–æ–π
        let attributes = [NSAttributedString.Key.font : UIFont.boldSystemFont(ofSize: 16)]
        let attributes2 = [NSAttributedString.Key.font : UIFont.systemFont(ofSize: 16)]
        let boldString = NSMutableAttributedString(string: firstName, attributes: attributes)
        let normalString = NSMutableAttributedString(string: " " + lastName, attributes: attributes2)
        boldString.append(normalString)
        
        //–∏–∑–º–µ–Ω–∏—Ç—å —Ü–≤–µ—Ç —á–∞—Å—Ç–∏ —Ç–µ–∫—Å—Ç–∞
        let range = (age as NSString).range(of: age)
        let ageString = NSMutableAttributedString(string: age, attributes: attributes2)
        if #available(iOS 13.0, *) {
            ageString.addAttribute(NSAttributedString.Key.foregroundColor, value: UIColor.systemGray , range: range)
        } else {
            // Fallback on earlier versions
            ageString.addAttribute(NSAttributedString.Key.foregroundColor, value: UIColor.darkGray , range: range)
        }
        boldString.append(ageString)
        
//        cell.textLabel?.text = firstName + " " + lastName //–Ω–∞–¥–ø–∏—Å—å –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —è—á–µ–∏ÃÜ–∫–µ –∏–º–µ–Ω–∏
        cell.textLabel?.attributedText = boldString
        
        if let date = birthday.birthdate as Date? {
            //—Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–∞—Ç—ã
            let formatter = DateFormatter()
            formatter.dateFormat = "dd.MM.yyyy"
            
            //–¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ, –∏ –∑–∞ —Å–∫–æ–ª—å–∫–æ –æ–Ω–æ –¥–Ω–µ–π
            var rest = String()
            switch additionalNotification {
            case 0:
                rest = ""
            case 1:
                rest = " 7"
            case 2:
                rest = " 14"
            case 3:
                rest = " 30"
            default:
                ()
            };
            
            //–∏–∑–º–µ–Ω–∏—Ç—å —Ü–≤–µ—Ç —á–∞—Å—Ç–∏ —Ç–µ–∫—Å—Ç–∞
            let mainString = formatter.string(from: date) + " (" + rightDay() + ")\(rest)  " + giftIdeas
            let range2 = (mainString as NSString).range(of: formatter.string(from: date) + " (" + rightDay() + ")")
            let range3 = (mainString as NSString).range(of: rest)
            let range4 = (mainString as NSString).range(of: giftIdeas)
            let attributes3 = [NSAttributedString.Key.font : UIFont.systemFont(ofSize: 14)]
            let attributedString = NSMutableAttributedString(string: mainString, attributes: attributes3)
            if #available(iOS 13.0, *) {
                attributedString.addAttribute(NSAttributedString.Key.foregroundColor, value: UIColor.systemGray , range: range2)
                attributedString.addAttribute(NSAttributedString.Key.foregroundColor, value: UIColor.systemGray2 , range: range4)
            } else {
                // Fallback on earlier versions
                attributedString.addAttribute(NSAttributedString.Key.foregroundColor, value: UIColor.darkGray , range: range2)
                attributedString.addAttribute(NSAttributedString.Key.foregroundColor, value: UIColor.gray , range: range4)
            }
            attributedString.addAttribute(NSAttributedString.Key.foregroundColor, value: UIColor.purple , range: range3)
            
//            cell.detailTextLabel?.text = dateFormatter.string(from: date) + " (" + rightDay() + ") ‚Üí " + giftIdeas //–Ω–∞–¥–ø–∏—Å—å –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —è—á–µ–∏ÃÜ–∫–µ –¥–∞—Ç—ã —Ä–æ–∂–¥–µ–Ω–∏—è
            cell.detailTextLabel?.attributedText = attributedString
            cell.detailTextLabel?.numberOfLines = 0
        } else {
            cell.detailTextLabel?.text = " "
        }
        
        return cell //–≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ —è—á–µ–∏ÃÜ–∫–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ, –≥–æ—Ç–æ–≤–æ–º –∫ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—é –≤ —Ç–∞–±–ª–∏—á–Ω–æ–º –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–∏
    }

    // Override to support conditional editing of the table view.
    override func tableView(_ tableView: UITableView, canEditRowAt indexPath: IndexPath) -> Bool {
        // Return false if you do not want the specified item to be editable.
        return true
    }

    // Override to support editing the table view.
    override func tableView(_ tableView: UITableView, commit editingStyle: UITableViewCell.EditingStyle, forRowAt indexPath: IndexPath) {
        
        if birthdays.count > indexPath.row { //birthdays.count - –∫–æ–ª-–≤–æ –î–†, –∞ indexPath.row - –∏–Ω–¥–µ–∫—Å—ã –î–† (–∏—Ö –æ—Ç—Å—á–µ—Ç –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å 0), –ø–æ—ç—Ç–æ–º—É –∑–Ω–∞–∫ >
            
            let birthday = birthdays[indexPath.row]
            
            // –£–¥–∞–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
            if let identifier = birthday.birthdayId {
                let center = UNUserNotificationCenter.current()
                center.removePendingNotificationRequests(withIdentifiers: [identifier])
                
                //—É–¥–∞–ª—è–µ–º –≤—Ç–æ—Ä–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
                let center2 = UNUserNotificationCenter.current()
                center2.removePendingNotificationRequests(withIdentifiers: [identifier + "2"])
                
                //—É–¥–∞–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
                let center3 = UNUserNotificationCenter.current()
                center3.removePendingNotificationRequests(withIdentifiers: [identifier + "3"])
            }
            
            let appDelegate = UIApplication.shared.delegate as! AppDelegate
            let context = appDelegate.persistentContainer.viewContext
            
            context.delete(birthday)
            birthdays.remove(at: indexPath.row)
            
            do {
                try context.save()
            } catch let error {
                print("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏ \(error).")
            }
            
            tableView.deleteRows(at:[indexPath],with: .fade)
        }
    }
    
    // MARK: - Navigation
    
    // In a storyboard-based application, you will often want to do a little preparation before navigation
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if segue.identifier == "edit" {
            
            let path = tableView.indexPathForSelectedRow
            let destination = segue.destination as! EditBirthdayTableViewController
            destination.index = path?.row
            
            firstNameData.removeAll()
            lastNameData.removeAll()
            giftIdeasData.removeAll()
            birthdateData.removeAll()
            for number in 0...(birthdays.count-1) {
                firstNameData.append(birthdays[number].firstName ?? "")
                lastNameData.append(birthdays[number].lastName ?? "")
                giftIdeasData.append(birthdays[number].giftIdeas ?? "")
                birthdateData.append(birthdays[number].birthdate!) //!, —Ç.–∫. –∑–Ω–∞—á–µ–Ω–∏–µ —Ç–æ—á–Ω–æ –Ω–µ nil
            }
            
            destination.firstName = firstNameData
            destination.lastName = lastNameData
            destination.giftIdeas = giftIdeasData
            destination.birthdate = birthdateData
            
        }
        // Get the new view controller using [segue destinationViewController].
        // Pass the selected object to the new view controller.
    }
}
